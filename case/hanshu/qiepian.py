'''切片'''
'''切片是在可迭代对象的基础上，取出任意长度的元素，同时取得范围、频次也是可以自定义的
    切片是取操作，不改变原值
'''
'''
可以切片的对象：list,tuple
       [start,end ]  star 和end 指的是下标，
          这个值可以是任意值，即可以超出下标  超出下标后不报错，切的值为空，
          [0,1] 切的是第一个元素，和其他一样包含头部，不包含尾部
           start 和end  可以是负数，当为负数时，需要从尾部开始 -1 即为 len-1 的值
           
           
          当为 0或者len-1 的时候可以不写即[::gap]
       [gap]:即元素切片的间隔，不写是默认为1，即顺序取数。
             times值可以为负数，负数的时候即从尾部取数
       [start ,end ,gap]    gap与start、end的关系
         当gap为正数时：
          必须满足 start<end ,即在列表中end的部分始终在start的左边
            即正序：【2:5:3】 【-4，-1:4】  【-1:】 
         当gap为负数时：
           必须满足  start>end  即 在列表中end部分始终在start的右边
        所以说，切片的三个参数【start，end，gap】中;
          start 和end  决定着切片的取值范围，同时gap又决定着切片的方向，
          并且对整个范围进行一个判断，如果起始位置和结束位置不符合gap的要求，
          那么整个切片取到的就是空的。   
'''
list1=[0,1,2,3,4,5,6]

one=list1[ 0:1:1]
print("切片第一个元素【0:1】%s"%one)

one=list1[ 8:100]
print("切片超出下标范围取值为：%s"%one)

a="7687676"
print(a[3:8])

two=list1[-6:5]
print("切片正序实现从正数数到负数的切%s"%two)


three=list1[3:5:-1]
print(three)

resver=list1[::-1]
print("切片实现反转【::-1】,做左到右，依次从尾部取数%s"%resver)


tuple1=(0,1,2,3,4)
#a=tuple1[0:2]
print(tuple1[0:2])

'''
 进行
'''